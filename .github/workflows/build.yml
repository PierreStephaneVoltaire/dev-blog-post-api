# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master,feature/*,develop]
  pull_request:
    branches: [ master,develop ]
jobs:
  deployservers:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.iam_aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.iam_aws_secret_access_key }}
      TF_VAR_api_port: ${{ secrets.api_port}}
      TF_VAR_api_secure_port: ${{ secrets.api_secure_port }}
      cert: ${{secrets.cert}}
      privkey: ${{secrets.privkey}}
      aws_key: ${{secrets.aws_key}}
      env_file: ${{secrets.env_file}}
    steps:
      - name: Checkout source code
        uses: actions/checkout@master
      - name: add envs
        run: |
          touch src/assets/cert.pem src/assets/privkey.pem
          echo $cert  >> src/assets/cert.pem
          echo $privkey  >> src/assets/privkey.pem
          echo $aws_key  >> aws_key.pem
          echo "
          redis_pass=\"${{ secrets.redis_pass}}\"
          aws_access_key_id=\"${{ secrets.aws_access_key_id}}\"
          aws_secret_access_key=\"${{ secrets.aws_secret_access_key}}\"
          region=\"${{ secrets.region}}\"
          db_type=\"${{ secrets.db_type}}\"
          db_host=\"${{ secrets.db_host}}\"
          db_port=\"${{ secrets.db_port}}\"
          db_username=\"${{ secrets.db_username}}\"
          db_password=\"${{ secrets.db_password}}\"
          db_database=\"${{ secrets.db_database}}\"
          api_port=\"${{ secrets.api_port}}\"
          environment=\"${{ secrets.environment}}\"
          api_secure_port=\"${{secrets.api_secure_port}}\"" >>.env;
      - name: Cache node modules0
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: install
        run: sudo npm i -g yarn && yarn
      - name: Build
        run: yarn build
      - name: check dir
        run: ls
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.0.1
      - name: 'Terraform Init'
        run: terraform init
      - name: 'Terraform Plan'
        run: terraform plan -input=false
      - name: 'Terraform apply'
        run: terraform apply -input=false -auto-approve

