version: '3'

networks:
  app-tier:
    driver: bridge
  consul-demo:

services:
  app:
    build: .
    environment:
      - aws_access_key_id=${TF_VAR_aws_access_key_id}
      - aws_secret_access_key=${TF_VAR_aws_secret_access_key}
      - region=${TF_VAR_region}
      - db_type=${TF_VAR_db_type}
      - db_host=${TF_VAR_db_host}
      - db_port=${TF_VAR_db_port}
      - db_username=${TF_VAR_db_username}
      - db_password=${TF_VAR_db_password}
      - db_database=${TF_VAR_db_database}
      - api_port=${TF_VAR_api_port}
      - environment=${TF_VAR_environment}
      - redis_pass=${TF_VAR_redis_pass}
      - api_secure_port=${TF_VAR_api_secure_port}
    container_name: devblog
    image: devblog:latest

    networks:
      - app-tier
    ports:
      - "${api_secure_port}:${api_secure_port}"
  redis:
    image: 'bitnami/redis:latest'
    container_name: ddd_cache
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - REDIS_PASSWORD=${TF_VAR_redis_pass}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'
    networks:
      - app-tier
  consul-agent-1: &consul-agent
    image: consul:latest
    networks:
      - app-tier
    command: "agent -retry-join consul-server-bootstrap -client 0.0.0.0"

  consul-agent-2:
    <<: *consul-agent

  consul-agent-3:
    <<: *consul-agent

  consul-server-1: &consul-server
    <<: *consul-agent
    command: "agent -server -retry-join consul-server-bootstrap -client 0.0.0.0"
  consul-server-2:
    <<: *consul-server

  consul-server-bootstrap:
    <<: *consul-agent
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"
    command: "agent -server -bootstrap-expect 3 -ui -client 0.0.0.0"


volumes:
  redis_data:
    driver: local
